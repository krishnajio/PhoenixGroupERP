<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnsave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <data name="Button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>